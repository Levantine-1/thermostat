[default]
# systemctl and proxypass is expecting to run on port 5000. Use 5500 when running with VSCode in live server mode
port = 5500
# Timescale can either in 'minute' or 'second' Use 'second' to run cycles in seconds for testing purposes
timescale = second


[thermostat_info]
thermostat_host = 10.69.69.123
primary_sensor = Thermostat

[test_mode]
# Test mode set to 'true' will return and log/print the api request without sending control commands to the thermostat.
test_mode = true
# Test mode needs to be true before the next 2 will be used
# If set sample data to true if you cannot reach the thermostat over the network to test.
test_mode_use_sample_data = false
#If you don't want random data, you can put in a custom index to use (between 0-4 or false)
test_mode_sample_data_custom_index = false

[logging]
logfile = ./thermostat_api.log
loglevel = info
log_stream_to_console = true
backupCount = 2
# 157286400 B = 150 MB
maxBytes = 157286400

[api_path]
apath_get_status = /thermostat/status
apath_send_cmd = /thermostat/cmd
console_data = /thermostat/console_data

[database]
db_file = ./thermostat.db

        "current_mode": valid_modes[data['mode']],
        "current_mode_state": valid_mode_state[data['state']],
        "fan_setting": valid_bools[data['fan']],
        "current_fan_state": valid_bools[data['fanstate']],
        "away_mode": valid_bools[data['away']],
        "cool_target": str(data['cooltemp']) + "°F",
        "heat_target": str(data['heattemp']) + "°F",
        "temperature_delta": str(data['setpointdelta']) + "°F",
        "sensor_temp": sensor_temp